public static List<Map<String, String>> filterByLoopPath(List<Map<String, String>> allMaps, String loopPath) {
    String normalizedPath = loopPath.replace("/", ":").replaceAll("^:+", "");

    List<Map<String, String>> filtered = new ArrayList<>();

    for (Map<String, String> originalMap : allMaps) {
        Map<String, String> matchingEntries = new LinkedHashMap<>();

        for (Map.Entry<String, String> entry : originalMap.entrySet()) {
            if (entry.getKey().startsWith(normalizedPath)) {
                matchingEntries.put(entry.getKey(), entry.getValue());
            }
        }

        if (!matchingEntries.isEmpty()) {
            filtered.add(matchingEntries);
        }
    }

    return filtered;
}







Scanner scanner = new Scanner(System.in);
System.out.println("Enter the loop path (e.g., /Loop-2000C/Loop-2300/Loop-2400):");
String userPath = scanner.nextLine();

List<Map<String, String>> result = filterByLoopPath(allExtractedData, userPath);

System.out.println("\n--- Filtered Results for " + userPath + " ---");
for (Map<String, String> dataMap : result) {
    System.out.println("---- Matched Segment ----");
    dataMap.forEach((key, value) -> System.out.println(key + " -> " + value));
}
