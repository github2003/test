private static String extractLoop2320Key(String path) {
    // Extract something like "Loop-2320[3]" from "/Loop-2300/Loop-2320[3]/Segment-REF/Element"
    int index = path.indexOf("Loop-2320[");
    if (index != -1) {
        int end = path.indexOf("]", index);
        return path.substring(index, end + 1); // e.g., Loop-2320[3]
    }
    return null;
}


// Grouped result
Map<String, Map<String, String>> groupedBy2320 = new LinkedHashMap<>();

for (Map<String, String> flatMap : parsedData) {
    for (Map.Entry<String, String> entry : flatMap.entrySet()) {
        String key = entry.getKey();
        String value = entry.getValue();

        // Extract the Loop-2320[i] identifier using regex
        if (key.contains("Loop-2320[")) {
            String groupKey = extractLoop2320Key(key); // e.g., "Loop-2320[0]"

            // Put into that group's map
            groupedBy2320.computeIfAbsent(groupKey, k -> new LinkedHashMap<>())
                         .put(key, value);
        }
    }
}

// Now you have a list of maps, each representing one Loop-2320 object
List<Map<String, String>> loop2320Objects = new ArrayList<>(groupedBy2320.values());
